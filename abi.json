{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AllNFTsMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintingPeriodOver",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "query",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "queries",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawWTAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5073b95777719ae59ea47a99e744afa59cdcf1c410a16040518060400160405280600881526020016727232a32b739b7b960c11b8152506040518060400160405280600881526020016727232a22a729a7a960c11b81525081600090816200007a919062000187565b50600162000089828262000187565b5050600680546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3504260805262000253565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010d57607f821691505b6020821081036200012e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018257600081815260208120601f850160051c810160208610156200015d5750805b601f850160051c820191505b818110156200017e5782815560010162000169565b5050505b505050565b81516001600160401b03811115620001a357620001a3620000e2565b620001bb81620001b48454620000f8565b8462000134565b602080601f831160018114620001f35760008415620001da5750858301515b600019600386901b1c1916600185901b1785556200017e565b600085815260208120601f198616915b82811015620002245788860151825594840194600190910190840162000203565b5085821015620002435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611f436200026f60003960006110750152611f436000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806370a08231116100d8578063ab9c67ad1161008c578063d85d3d2711610066578063d85d3d2714610323578063e985e9c514610336578063f2fde38b1461036457600080fd5b8063ab9c67ad146102ea578063b88d4fde146102fd578063c87b56dd1461031057600080fd5b806395d89b41116100bd57806395d89b41146102c6578063a22cb465146102ce578063a5c42ef1146102e157600080fd5b806370a08231146102855780638da5cb5b146102a657600080fd5b806342842e0e1161012f5780636352211e116101145780636352211e1461026257806367675dcc146102755780636c0360eb1461027d57600080fd5b806342842e0e1461023c57806355f804b31461024f57600080fd5b8063081812fc11610160578063081812fc146101b9578063095ea7b31461021457806323b872dd1461022957600080fd5b806301ffc9a71461017c57806306fdde03146101a4575b600080fd5b61018f61018a366004611680565b610377565b60405190151581526020015b60405180910390f35b6101ac61045c565b60405161019b91906116c8565b6101ef6101c7366004611719565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b610227610222366004611756565b6104ea565b005b610227610237366004611780565b610639565b61022761024a366004611780565b610900565b61022761025d3660046117eb565b610a6a565b6101ef610270366004611719565b610afb565b610227610b8c565b6101ac610d42565b6102986102933660046118ba565b610d4f565b60405190815260200161019b565b6006546101ef9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ac610df7565b6102276102dc3660046118e3565b610e04565b61029860075481565b6101ac6102f8366004611719565b610e9b565b61022761030b366004611963565b610eb4565b6101ac61031e366004611719565b61100e565b6102276103313660046119d2565b61106c565b61018f610344366004611a14565b600560209081526000928352604080842090915290825290205460ff1681565b6102276103723660046118ba565b611201565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061040a57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061045657507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461046990611a47565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611a47565b80156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163381148061054d575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6105b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146106c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff8216610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016105af565b3373ffffffffffffffffffffffffffffffffffffffff8416148061079a575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806107c8575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61090b838383610639565b73ffffffffffffffffffffffffffffffffffffffff82163b15806109ff57506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db9190611a9a565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610a65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016105af565b505050565b60065473ffffffffffffffffffffffffffffffffffffffff163314610aeb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016105af565b6008610af78282611b05565b5050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610b87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e4f545f4d494e5445440000000000000000000000000000000000000000000060448201526064016105af565b919050565b60065473ffffffffffffffffffffffffffffffffffffffff163314610c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016105af565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527377e06c9eccf2e797fd462a92b6d7642ef85b0a449063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca39190611c1f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190611c38565b610d4057600080fd5b565b6008805461046990611a47565b600073ffffffffffffffffffffffffffffffffffffffff8216610dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016105af565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6001805461046990611a47565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009602052600090815260409020805461046990611a47565b610ebf858585610639565b73ffffffffffffffffffffffffffffffffffffffff84163b1580610fa157506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a0290610f3a9033908a90899089908990600401611c55565b6020604051808303816000875af1158015610f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7d9190611a9a565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611007576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016105af565b5050505050565b606060006008805461101f90611a47565b90501161103b5760405180602001604052806000815250610456565b6008611046836112f3565b604051602001611057929190611cd4565b60405160208183030381529060405292915050565b611099620697807f0000000000000000000000000000000000000000000000000000000000000000611da8565b4211156110d2576040517fe1be3ef100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f460075460016110e49190611da8565b111561111c576040517fe51add9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152633b9aca0060448201527377e06c9eccf2e797fd462a92b6d7642ef85b0a44906323b872dd906064016020604051808303816000875af1158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba9190611c38565b6111c357600080fd5b600780549060006111d383611dbb565b909155505060075460009081526009602052604090206111f4828483611df3565b50610af733600754611355565b60065473ffffffffffffffffffffffffffffffffffffffff163314611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016105af565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061130d57508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b61135f82826114b6565b73ffffffffffffffffffffffffffffffffffffffff82163b158061145057506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af1158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c9190611a9a565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610af7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff8216611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016105af565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16156115bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461167d57600080fd5b50565b60006020828403121561169257600080fd5b813561169d8161164f565b9392505050565b60005b838110156116bf5781810151838201526020016116a7565b50506000910152565b60208152600082518060208401526116e78160408501602087016116a4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561172b57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b8757600080fd5b6000806040838503121561176957600080fd5b61177283611732565b946020939093013593505050565b60008060006060848603121561179557600080fd5b61179e84611732565b92506117ac60208501611732565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156117fd57600080fd5b813567ffffffffffffffff8082111561181557600080fd5b818401915084601f83011261182957600080fd5b81358181111561183b5761183b6117bc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611881576118816117bc565b8160405282815287602084870101111561189a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156118cc57600080fd5b61169d82611732565b801515811461167d57600080fd5b600080604083850312156118f657600080fd5b6118ff83611732565b9150602083013561190f816118d5565b809150509250929050565b60008083601f84011261192c57600080fd5b50813567ffffffffffffffff81111561194457600080fd5b60208301915083602082850101111561195c57600080fd5b9250929050565b60008060008060006080868803121561197b57600080fd5b61198486611732565b945061199260208701611732565b935060408601359250606086013567ffffffffffffffff8111156119b557600080fd5b6119c18882890161191a565b969995985093965092949392505050565b600080602083850312156119e557600080fd5b823567ffffffffffffffff8111156119fc57600080fd5b611a088582860161191a565b90969095509350505050565b60008060408385031215611a2757600080fd5b611a3083611732565b9150611a3e60208401611732565b90509250929050565b600181811c90821680611a5b57607f821691505b602082108103611a94577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611aac57600080fd5b815161169d8161164f565b601f821115610a6557600081815260208120601f850160051c81016020861015611ade5750805b601f850160051c820191505b81811015611afd57828155600101611aea565b505050505050565b815167ffffffffffffffff811115611b1f57611b1f6117bc565b611b3381611b2d8454611a47565b84611ab7565b602080601f831160018114611b865760008415611b505750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611afd565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611bd357888601518255948401946001909101908401611bb4565b5085821015611c0f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611c3157600080fd5b5051919050565b600060208284031215611c4a57600080fd5b815161169d816118d5565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b6000808454611ce281611a47565b60018281168015611cfa5760018114611d2d57611d5c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611d5c565b8860005260208060002060005b85811015611d535781548a820152908401908201611d3a565b50505082870194505b505050508351611d708183602088016116a4565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561045657610456611d79565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dec57611dec611d79565b5060010190565b67ffffffffffffffff831115611e0b57611e0b6117bc565b611e1f83611e198354611a47565b83611ab7565b6000601f841160018114611e715760008515611e3b5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611007565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015611ec05786850135825560209485019460019092019101611ea0565b5086821015611efb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b018355505050505056fea2646970667358221220aa7b447b17604cbf96969af0ffa609a57dea53c1cc3140d28af369cd56df5ae864736f6c63430008130033",
    "sourceMap": "479:3657:34:-:0;;;2139:111;;;;;;;;;;839:42;2154:111:32;;;;;;;;;;;;;-1:-1:-1;;;2154:111:32;;;;;;;;;;;;;;;;-1:-1:-1;;;2154:111:32;;;2227:5;2220:4;:12;;;;;;:::i;:::-;-1:-1:-1;2242:6:32;:16;2251:7;2242:6;:16;:::i;:::-;-1:-1:-1;;1045:5:30;:14;;-1:-1:-1;;;;;;1045:14:30;-1:-1:-1;;;;;1045:14:30;;;;;;;;1075:40;;1045:14;;-1:-1:-1;;;1075:40:30;;-1:-1:-1;;1075:40:30;-1:-1:-1;2228:15:34::2;2215:28;::::0;479:3657;;14:127:37;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:37;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:37;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:37;;;2580:26;2531:89;-1:-1:-1;;1335:1:37;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:37;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:37;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:37;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:37:o;:::-;479:3657:34;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101775760003560e01c806370a08231116100d8578063ab9c67ad1161008c578063d85d3d2711610066578063d85d3d2714610323578063e985e9c514610336578063f2fde38b1461036457600080fd5b8063ab9c67ad146102ea578063b88d4fde146102fd578063c87b56dd1461031057600080fd5b806395d89b41116100bd57806395d89b41146102c6578063a22cb465146102ce578063a5c42ef1146102e157600080fd5b806370a08231146102855780638da5cb5b146102a657600080fd5b806342842e0e1161012f5780636352211e116101145780636352211e1461026257806367675dcc146102755780636c0360eb1461027d57600080fd5b806342842e0e1461023c57806355f804b31461024f57600080fd5b8063081812fc11610160578063081812fc146101b9578063095ea7b31461021457806323b872dd1461022957600080fd5b806301ffc9a71461017c57806306fdde03146101a4575b600080fd5b61018f61018a366004611680565b610377565b60405190151581526020015b60405180910390f35b6101ac61045c565b60405161019b91906116c8565b6101ef6101c7366004611719565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b610227610222366004611756565b6104ea565b005b610227610237366004611780565b610639565b61022761024a366004611780565b610900565b61022761025d3660046117eb565b610a6a565b6101ef610270366004611719565b610afb565b610227610b8c565b6101ac610d42565b6102986102933660046118ba565b610d4f565b60405190815260200161019b565b6006546101ef9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ac610df7565b6102276102dc3660046118e3565b610e04565b61029860075481565b6101ac6102f8366004611719565b610e9b565b61022761030b366004611963565b610eb4565b6101ac61031e366004611719565b61100e565b6102276103313660046119d2565b61106c565b61018f610344366004611a14565b600560209081526000928352604080842090915290825290205460ff1681565b6102276103723660046118ba565b611201565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061040a57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061045657507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461046990611a47565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611a47565b80156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163381148061054d575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6105b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146106c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff8216610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016105af565b3373ffffffffffffffffffffffffffffffffffffffff8416148061079a575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806107c8575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61090b838383610639565b73ffffffffffffffffffffffffffffffffffffffff82163b15806109ff57506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db9190611a9a565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610a65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016105af565b505050565b60065473ffffffffffffffffffffffffffffffffffffffff163314610aeb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016105af565b6008610af78282611b05565b5050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610b87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e4f545f4d494e5445440000000000000000000000000000000000000000000060448201526064016105af565b919050565b60065473ffffffffffffffffffffffffffffffffffffffff163314610c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016105af565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527377e06c9eccf2e797fd462a92b6d7642ef85b0a449063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca39190611c1f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190611c38565b610d4057600080fd5b565b6008805461046990611a47565b600073ffffffffffffffffffffffffffffffffffffffff8216610dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016105af565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6001805461046990611a47565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6009602052600090815260409020805461046990611a47565b610ebf858585610639565b73ffffffffffffffffffffffffffffffffffffffff84163b1580610fa157506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a0290610f3a9033908a90899089908990600401611c55565b6020604051808303816000875af1158015610f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7d9190611a9a565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611007576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016105af565b5050505050565b606060006008805461101f90611a47565b90501161103b5760405180602001604052806000815250610456565b6008611046836112f3565b604051602001611057929190611cd4565b60405160208183030381529060405292915050565b611099620697807f0000000000000000000000000000000000000000000000000000000000000000611da8565b4211156110d2576040517fe1be3ef100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f460075460016110e49190611da8565b111561111c576040517fe51add9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152633b9aca0060448201527377e06c9eccf2e797fd462a92b6d7642ef85b0a44906323b872dd906064016020604051808303816000875af1158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba9190611c38565b6111c357600080fd5b600780549060006111d383611dbb565b909155505060075460009081526009602052604090206111f4828483611df3565b50610af733600754611355565b60065473ffffffffffffffffffffffffffffffffffffffff163314611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016105af565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061130d57508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b61135f82826114b6565b73ffffffffffffffffffffffffffffffffffffffff82163b158061145057506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af1158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c9190611a9a565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610af7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff8216611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016105af565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16156115bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016105af565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461167d57600080fd5b50565b60006020828403121561169257600080fd5b813561169d8161164f565b9392505050565b60005b838110156116bf5781810151838201526020016116a7565b50506000910152565b60208152600082518060208401526116e78160408501602087016116a4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561172b57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b8757600080fd5b6000806040838503121561176957600080fd5b61177283611732565b946020939093013593505050565b60008060006060848603121561179557600080fd5b61179e84611732565b92506117ac60208501611732565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156117fd57600080fd5b813567ffffffffffffffff8082111561181557600080fd5b818401915084601f83011261182957600080fd5b81358181111561183b5761183b6117bc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611881576118816117bc565b8160405282815287602084870101111561189a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156118cc57600080fd5b61169d82611732565b801515811461167d57600080fd5b600080604083850312156118f657600080fd5b6118ff83611732565b9150602083013561190f816118d5565b809150509250929050565b60008083601f84011261192c57600080fd5b50813567ffffffffffffffff81111561194457600080fd5b60208301915083602082850101111561195c57600080fd5b9250929050565b60008060008060006080868803121561197b57600080fd5b61198486611732565b945061199260208701611732565b935060408601359250606086013567ffffffffffffffff8111156119b557600080fd5b6119c18882890161191a565b969995985093965092949392505050565b600080602083850312156119e557600080fd5b823567ffffffffffffffff8111156119fc57600080fd5b611a088582860161191a565b90969095509350505050565b60008060408385031215611a2757600080fd5b611a3083611732565b9150611a3e60208401611732565b90509250929050565b600181811c90821680611a5b57607f821691505b602082108103611a94577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611aac57600080fd5b815161169d8161164f565b601f821115610a6557600081815260208120601f850160051c81016020861015611ade5750805b601f850160051c820191505b81811015611afd57828155600101611aea565b505050505050565b815167ffffffffffffffff811115611b1f57611b1f6117bc565b611b3381611b2d8454611a47565b84611ab7565b602080601f831160018114611b865760008415611b505750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611afd565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611bd357888601518255948401946001909101908401611bb4565b5085821015611c0f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611c3157600080fd5b5051919050565b600060208284031215611c4a57600080fd5b815161169d816118d5565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b6000808454611ce281611a47565b60018281168015611cfa5760018114611d2d57611d5c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611d5c565b8860005260208060002060005b85811015611d535781548a820152908401908201611d3a565b50505082870194505b505050508351611d708183602088016116a4565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561045657610456611d79565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dec57611dec611d79565b5060010190565b67ffffffffffffffff831115611e0b57611e0b6117bc565b611e1f83611e198354611a47565b83611ab7565b6000601f841160018114611e715760008515611e3b5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611007565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015611ec05786850135825560209485019460019092019101611ea0565b5086821015611efb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b018355505050505056fea2646970667358221220aa7b447b17604cbf96969af0ffa609a57dea53c1cc3140d28af369cd56df5ae864736f6c63430008130033",
    "sourceMap": "479:3657:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:335:32;;;;;;:::i;:::-;;:::i;:::-;;;611:14:37;;604:22;586:41;;574:2;559:18;4714:335:32;;;;;;;;899:18;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1714:42:37;1702:55;;;1684:74;;1672:2;1657:18;1844:46:32;1538:226:37;2453:282:32;;;;;;:::i;:::-;;:::i;:::-;;2950:741;;;;;;:::i;:::-;;:::i;3697:396::-;;;;;;:::i;:::-;;:::i;3699:98:34:-;;;;;;:::i;:::-;;:::i;1327:149:32:-;;;;;;:::i;:::-;;:::i;3979:155:34:-;;;:::i;2014:21::-;;;:::i;1482:168:32:-;;;;;;:::i;:::-;;:::i;:::-;;;4074:25:37;;;4062:2;4047:18;1482:168:32;3928:177:37;690:20:30;;;;;;;;;924::32;;;:::i;2741:203::-;;;;;;:::i;:::-;;:::i;1939:22:34:-;;;;;;2091:41;;;;;;:::i;:::-;;:::i;4099:427:32:-;;;;;;:::i;:::-;;:::i;3365:200:34:-;;;;;;:::i;:::-;;:::i;2461:487::-;;;;;;:::i;:::-;;:::i;1897:68:32:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:161:30;;;;;;:::i;:::-;;:::i;4714:335:32:-;4790:4;4825:25;;;;;;:100;;-1:-1:-1;4900:25:32;;;;;4825:100;:175;;;-1:-1:-1;4975:25:32;;;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:32:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;;;2571:10;:19;;;:58;;-1:-1:-1;2594:23:32;;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;;;;6860:2:37;2563:85:32;;;6842:21:37;6899:2;6879:18;;;6872:30;6938:16;6918:18;;;6911:44;6972:18;;2563:85:32;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;;;;;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;;3073:20;;;3081:12;;3073:20;3065:43;;;;;;;7203:2:37;3065:43:32;;;7185:21:37;7242:2;7222:18;;;7215:30;7281:12;7261:18;;;7254:40;7311:18;;3065:43:32;7001:334:37;3065:43:32;3127:16;;;3119:46;;;;;;;7542:2:37;3119:46:32;;;7524:21:37;7581:2;7561:18;;;7554:30;7620:19;7600:18;;;7593:47;7657:18;;3119:46:32;7340:341:37;3119:46:32;3197:10;:18;;;;;:56;;-1:-1:-1;3219:22:32;;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:32;;;;:11;:15;;;;;;;;3257:10;:29;3197:89;3176:150;;;;;;;6860:2:37;3176:150:32;;;6842:21:37;6899:2;6879:18;;;6872:30;6938:16;6918:18;;;6911:44;6972:18;;3176:150:32;6658:338:37;3176:150:32;3526:16;;;;;;;;:10;:16;;;;;;;;:18;;;;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;;;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;3697:396::-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;3874:14;;;;:19;;:170;;-1:-1:-1;3913:66:32;;3999:45;3913:66;;;3954:10;3913:66;;;8014:34:37;3913:40:32;8084:15:37;;;8064:18;;;8057:43;8116:18;;;8109:34;;;8179:3;8159:18;;;8152:31;-1:-1:-1;8199:19:37;;;8192:30;3999:45:32;;3913:40;;;;3999:45;;8239:19:37;;3913:66:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:131;;;3874:170;3853:233;;;;;;;8725:2:37;3853:233:32;;;8707:21:37;8764:2;8744:18;;;8737:30;8803:18;8783;;;8776:46;8839:18;;3853:233:32;8523:340:37;3853:233:32;3697:396;;;:::o;3699:98:34:-;778:5:30;;;;764:10;:19;756:44;;;;;;;9070:2:37;756:44:30;;;9052:21:37;9109:2;9089:18;;;9082:30;9148:14;9128:18;;;9121:42;9180:18;;756:44:30;8868:336:37;756:44:30;3772:7:34::1;:18;3782:8:::0;3772:7;:18:::1;:::i;:::-;;3699:98:::0;:::o;1327:149:32:-;1385:13;1427:12;;;:8;:12;;;;;;1418:36;1427:12;;1410:59;;;;;;;11794:2:37;1410:59:32;;;11776:21:37;11833:2;11813:18;;;11806:30;11872:12;11852:18;;;11845:40;11902:18;;1410:59:32;11592:334:37;1410:59:32;1327:149;;;:::o;3979:155:34:-;778:5:30;;;;764:10;:19;756:44;;;;;;;9070:2:37;756:44:30;;;9052:21:37;9109:2;9089:18;;;9082:30;9148:14;9128:18;;;9121:42;9180:18;;756:44:30;8868:336:37;756:44:30;4081::34::1;::::0;;;;4119:4:::1;4081:44;::::0;::::1;1684:74:37::0;950:42:34::1;::::0;4040:28:::1;::::0;4069:10:::1;::::0;950:42;;4081:29:::1;::::0;1657:18:37;;4081:44:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4040:86;::::0;;::::1;::::0;;;;;;12324:42:37;12312:55;;;4040:86:34::1;::::0;::::1;12294:74:37::0;12384:18;;;12377:34;12267:18;;4040:86:34::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4032:95;;;::::0;::::1;;3979:155::o:0;2014:21::-;;;;;;;:::i;1482:168:32:-;1545:7;1572:19;;;1564:44;;;;;;;12874:2:37;1564:44:32;;;12856:21:37;12913:2;12893:18;;;12886:30;12952:14;12932:18;;;12925:42;12984:18;;1564:44:32;12672:336:37;1564:44:32;-1:-1:-1;1626:17:32;;;;;;:10;:17;;;;;;;1482:168::o;924:20::-;;;;;;;:::i;2741:203::-;2843:10;2826:28;;;;:16;:28;;;;;;;;;:38;;;;;;;;;;;;:49;;;;;;;;;;;;;2891:46;;586:41:37;;;2826:38:32;;2843:10;2891:46;;559:18:37;2891:46:32;;;;;;;2741:203;;:::o;2091:41:34:-;;;;;;;;;;;;;;;;:::i;4099:427:32:-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;4305:14;;;;:19;;:172;;-1:-1:-1;4344:68:32;;4432:45;4344:68;;;4432:45;4344:40;;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:133;;;4305:172;4284:235;;;;;;;8725:2:37;4284:235:32;;;8707:21:37;8764:2;8744:18;;;8737:30;8803:18;8783;;;8776:46;8839:18;;4284:235:32;8523:340:37;4284:235:32;4099:427;;;;;:::o;3365:200:34:-;3439:13;3495:1;3477:7;3471:21;;;;;:::i;:::-;;;:25;:87;;;;;;;;;;;;;;;;;3523:7;3532:19;:8;:17;:19::i;:::-;3506:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3464:94;3365:200;-1:-1:-1;;3365:200:34:o;2461:487::-;2539:24;1310:6;2539:10;:24;:::i;:::-;2521:15;:42;2517:99;;;2586:19;;;;;;;;;;;;;;2517:99;1200:3;2630:7;;2640:1;2630:11;;;;:::i;:::-;:24;2626:77;;;2677:15;;;;;;;;;;;;;;2626:77;2774:71;;;;;2807:10;2774:71;;;15427:34:37;2827:4:34;15477:18:37;;;15470:43;1097:3:34;15529:18:37;;;15522:34;950:42:34;;2774:32;;15339:18:37;;2774:71:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2766:80;;;;;;2857:7;:9;;;:7;:9;;;:::i;:::-;;;;-1:-1:-1;;2884:7:34;;2876:16;;;;:7;:16;;;;;:24;2895:5;;2876:16;:24;:::i;:::-;;2911:30;2921:10;2933:7;;2911:9;:30::i;1312:161:30:-;778:5;;;;764:10;:19;756:44;;;;;;;9070:2:37;756:44:30;;;9052:21:37;9109:2;9089:18;;;9082:30;9148:14;9128:18;;;9121:42;9180:18;;756:44:30;8868:336:37;756:44:30;1392:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1424:42:::1;::::0;1445:10:::1;::::0;1424:42:::1;::::0;-1:-1:-1;;1424:42:30::1;1312:161:::0;:::o;1287:2040:33:-;1343:17;1815:3;1808:4;1802:11;1798:21;1924:20;1918:4;1911:34;2068:2;2046:20;2042:29;2035:36;;;2169:1;2164:3;2157:14;2270:3;2504:5;2486:477;2607:1;2602:3;2598:11;2591:18;;2776:2;2770:4;2766:13;2762:2;2758:22;2753:3;2745:36;2867:2;2857:13;;2924:25;2486:477;2924:25;-1:-1:-1;3062:13:33;;;3176:12;;;;3292:19;;;3176:12;1287:2040;-1:-1:-1;1287:2040:33:o;6185:340:32:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;6300:14;;;;:19;;:176;;-1:-1:-1;6339:72:32;;6431:45;6339:72;;;6380:10;6339:72;;;8014:34:37;6400:1:32;8064:18:37;;;8057:43;;;8116:18;;;8109:34;;;8179:3;8159:18;;;8152:31;8199:19;;;8192:30;6431:45:32;6339:40;;;;6431:45;;8239:19:37;;6339:72:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;6300:176;6279:239;;;;;;;8725:2:37;6279:239:32;;;8707:21:37;8764:2;8744:18;;;8737:30;8803:18;8783;;;8776:46;8839:18;;6279:239:32;8523:340:37;5243:371:32;5317:16;;;5309:46;;;;;;;7542:2:37;5309:46:32;;;7524:21:37;7581:2;7561:18;;;7554:30;7620:19;7600:18;;;7593:47;7657:18;;5309:46:32;7340:341:37;5309:46:32;5398:1;5374:12;;;:8;:12;;;;;;:26;:12;:26;5366:53;;;;;;;17299:2:37;5366:53:32;;;17281:21:37;17338:2;17318:18;;;17311:30;17377:16;17357:18;;;17350:44;17411:18;;5366:53:32;17097:338:37;5366:53:32;5509:14;;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;;;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;14:177:37:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;:::-;430:5;196:245;-1:-1:-1;;;196:245:37:o;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:37;862:16;;855:27;638:250::o;893:455::-;1042:2;1031:9;1024:21;1005:4;1074:6;1068:13;1117:6;1112:2;1101:9;1097:18;1090:34;1133:79;1205:6;1200:2;1189:9;1185:18;1180:2;1172:6;1168:15;1133:79;:::i;:::-;1264:2;1252:15;1269:66;1248:88;1233:104;;;;1339:2;1229:113;;893:455;-1:-1:-1;;893:455:37:o;1353:180::-;1412:6;1465:2;1453:9;1444:7;1440:23;1436:32;1433:52;;;1481:1;1478;1471:12;1433:52;-1:-1:-1;1504:23:37;;1353:180;-1:-1:-1;1353:180:37:o;1769:196::-;1837:20;;1897:42;1886:54;;1876:65;;1866:93;;1955:1;1952;1945:12;1970:254;2038:6;2046;2099:2;2087:9;2078:7;2074:23;2070:32;2067:52;;;2115:1;2112;2105:12;2067:52;2138:29;2157:9;2138:29;:::i;:::-;2128:39;2214:2;2199:18;;;;2186:32;;-1:-1:-1;;;1970:254:37:o;2229:328::-;2306:6;2314;2322;2375:2;2363:9;2354:7;2350:23;2346:32;2343:52;;;2391:1;2388;2381:12;2343:52;2414:29;2433:9;2414:29;:::i;:::-;2404:39;;2462:38;2496:2;2485:9;2481:18;2462:38;:::i;:::-;2452:48;;2547:2;2536:9;2532:18;2519:32;2509:42;;2229:328;;;;;:::o;2562:184::-;2614:77;2611:1;2604:88;2711:4;2708:1;2701:15;2735:4;2732:1;2725:15;2751:981;2820:6;2873:2;2861:9;2852:7;2848:23;2844:32;2841:52;;;2889:1;2886;2879:12;2841:52;2929:9;2916:23;2958:18;2999:2;2991:6;2988:14;2985:34;;;3015:1;3012;3005:12;2985:34;3053:6;3042:9;3038:22;3028:32;;3098:7;3091:4;3087:2;3083:13;3079:27;3069:55;;3120:1;3117;3110:12;3069:55;3156:2;3143:16;3178:2;3174;3171:10;3168:36;;;3184:18;;:::i;:::-;3318:2;3312:9;3380:4;3372:13;;3223:66;3368:22;;;3392:2;3364:31;3360:40;3348:53;;;3416:18;;;3436:22;;;3413:46;3410:72;;;3462:18;;:::i;:::-;3502:10;3498:2;3491:22;3537:2;3529:6;3522:18;3577:7;3572:2;3567;3563;3559:11;3555:20;3552:33;3549:53;;;3598:1;3595;3588:12;3549:53;3654:2;3649;3645;3641:11;3636:2;3628:6;3624:15;3611:46;3699:1;3677:15;;;3694:2;3673:24;3666:35;;;;-1:-1:-1;3681:6:37;2751:981;-1:-1:-1;;;;;2751:981:37:o;3737:186::-;3796:6;3849:2;3837:9;3828:7;3824:23;3820:32;3817:52;;;3865:1;3862;3855:12;3817:52;3888:29;3907:9;3888:29;:::i;4110:118::-;4196:5;4189:13;4182:21;4175:5;4172:32;4162:60;;4218:1;4215;4208:12;4233:315;4298:6;4306;4359:2;4347:9;4338:7;4334:23;4330:32;4327:52;;;4375:1;4372;4365:12;4327:52;4398:29;4417:9;4398:29;:::i;:::-;4388:39;;4477:2;4466:9;4462:18;4449:32;4490:28;4512:5;4490:28;:::i;:::-;4537:5;4527:15;;;4233:315;;;;;:::o;4553:347::-;4604:8;4614:6;4668:3;4661:4;4653:6;4649:17;4645:27;4635:55;;4686:1;4683;4676:12;4635:55;-1:-1:-1;4709:20:37;;4752:18;4741:30;;4738:50;;;4784:1;4781;4774:12;4738:50;4821:4;4813:6;4809:17;4797:29;;4873:3;4866:4;4857:6;4849;4845:19;4841:30;4838:39;4835:59;;;4890:1;4887;4880:12;4835:59;4553:347;;;;;:::o;4905:626::-;5002:6;5010;5018;5026;5034;5087:3;5075:9;5066:7;5062:23;5058:33;5055:53;;;5104:1;5101;5094:12;5055:53;5127:29;5146:9;5127:29;:::i;:::-;5117:39;;5175:38;5209:2;5198:9;5194:18;5175:38;:::i;:::-;5165:48;;5260:2;5249:9;5245:18;5232:32;5222:42;;5315:2;5304:9;5300:18;5287:32;5342:18;5334:6;5331:30;5328:50;;;5374:1;5371;5364:12;5328:50;5413:58;5463:7;5454:6;5443:9;5439:22;5413:58;:::i;:::-;4905:626;;;;-1:-1:-1;4905:626:37;;-1:-1:-1;5490:8:37;;5387:84;4905:626;-1:-1:-1;;;4905:626:37:o;5536:410::-;5607:6;5615;5668:2;5656:9;5647:7;5643:23;5639:32;5636:52;;;5684:1;5681;5674:12;5636:52;5724:9;5711:23;5757:18;5749:6;5746:30;5743:50;;;5789:1;5786;5779:12;5743:50;5828:58;5878:7;5869:6;5858:9;5854:22;5828:58;:::i;:::-;5905:8;;5802:84;;-1:-1:-1;5536:410:37;-1:-1:-1;;;;5536:410:37:o;5951:260::-;6019:6;6027;6080:2;6068:9;6059:7;6055:23;6051:32;6048:52;;;6096:1;6093;6086:12;6048:52;6119:29;6138:9;6119:29;:::i;:::-;6109:39;;6167:38;6201:2;6190:9;6186:18;6167:38;:::i;:::-;6157:48;;5951:260;;;;;:::o;6216:437::-;6295:1;6291:12;;;;6338;;;6359:61;;6413:4;6405:6;6401:17;6391:27;;6359:61;6466:2;6458:6;6455:14;6435:18;6432:38;6429:218;;6503:77;6500:1;6493:88;6604:4;6601:1;6594:15;6632:4;6629:1;6622:15;6429:218;;6216:437;;;:::o;8269:249::-;8338:6;8391:2;8379:9;8370:7;8366:23;8362:32;8359:52;;;8407:1;8404;8397:12;8359:52;8439:9;8433:16;8458:30;8482:5;8458:30;:::i;9335:545::-;9437:2;9432:3;9429:11;9426:448;;;9473:1;9498:5;9494:2;9487:17;9543:4;9539:2;9529:19;9613:2;9601:10;9597:19;9594:1;9590:27;9584:4;9580:38;9649:4;9637:10;9634:20;9631:47;;;-1:-1:-1;9672:4:37;9631:47;9727:2;9722:3;9718:12;9715:1;9711:20;9705:4;9701:31;9691:41;;9782:82;9800:2;9793:5;9790:13;9782:82;;;9845:17;;;9826:1;9815:13;9782:82;;;9786:3;;;9335:545;;;:::o;10116:1471::-;10242:3;10236:10;10269:18;10261:6;10258:30;10255:56;;;10291:18;;:::i;:::-;10320:97;10410:6;10370:38;10402:4;10396:11;10370:38;:::i;:::-;10364:4;10320:97;:::i;:::-;10472:4;;10536:2;10525:14;;10553:1;10548:782;;;;11374:1;11391:6;11388:89;;;-1:-1:-1;11443:19:37;;;11437:26;11388:89;10022:66;10013:1;10009:11;;;10005:84;10001:89;9991:100;10097:1;10093:11;;;9988:117;11490:81;;10518:1063;;10548:782;9282:1;9275:14;;;9319:4;9306:18;;10596:66;10584:79;;;10761:236;10775:7;10772:1;10769:14;10761:236;;;10864:19;;;10858:26;10843:42;;10956:27;;;;10924:1;10912:14;;;;10791:19;;10761:236;;;10765:3;11025:6;11016:7;11013:19;11010:261;;;11086:19;;;11080:26;11187:66;11169:1;11165:14;;;11181:3;11161:24;11157:97;11153:102;11138:118;11123:134;;11010:261;-1:-1:-1;;;;;11317:1:37;11301:14;;;11297:22;11284:36;;-1:-1:-1;10116:1471:37:o;11931:184::-;12001:6;12054:2;12042:9;12033:7;12029:23;12025:32;12022:52;;;12070:1;12067;12060:12;12022:52;-1:-1:-1;12093:16:37;;11931:184;-1:-1:-1;11931:184:37:o;12422:245::-;12489:6;12542:2;12530:9;12521:7;12517:23;12513:32;12510:52;;;12558:1;12555;12548:12;12510:52;12590:9;12584:16;12609:28;12631:5;12609:28;:::i;13013:744::-;13217:4;13246:42;13327:2;13319:6;13315:15;13304:9;13297:34;13379:2;13371:6;13367:15;13362:2;13351:9;13347:18;13340:43;;13419:6;13414:2;13403:9;13399:18;13392:34;13462:3;13457:2;13446:9;13442:18;13435:31;13503:6;13497:3;13486:9;13482:19;13475:35;13561:6;13553;13547:3;13536:9;13532:19;13519:49;13618:1;13612:3;13603:6;13592:9;13588:22;13584:32;13577:43;13747:3;13677:66;13672:2;13664:6;13660:15;13656:88;13645:9;13641:104;13637:114;13629:122;;13013:744;;;;;;;;:::o;13762:1078::-;13938:3;13967:1;14000:6;13994:13;14030:36;14056:9;14030:36;:::i;:::-;14085:1;14102:18;;;14129:191;;;;14334:1;14329:356;;;;14095:590;;14129:191;14177:66;14166:9;14162:82;14157:3;14150:95;14300:6;14293:14;14286:22;14278:6;14274:35;14269:3;14265:45;14258:52;;14129:191;;14329:356;14360:6;14357:1;14350:17;14390:4;14435:2;14432:1;14422:16;14460:1;14474:165;14488:6;14485:1;14482:13;14474:165;;;14566:14;;14553:11;;;14546:35;14609:16;;;;14503:10;;14474:165;;;14478:3;;;14668:6;14663:3;14659:16;14652:23;;14095:590;;;;;14716:6;14710:13;14732:68;14791:8;14786:3;14779:4;14771:6;14767:17;14732:68;:::i;:::-;14816:18;;13762:1078;-1:-1:-1;;;;13762:1078:37:o;14845:184::-;14897:77;14894:1;14887:88;14994:4;14991:1;14984:15;15018:4;15015:1;15008:15;15034:125;15099:9;;;15120:10;;;15117:36;;;15133:18;;:::i;15567:195::-;15606:3;15637:66;15630:5;15627:77;15624:103;;15707:18;;:::i;:::-;-1:-1:-1;15754:1:37;15743:13;;15567:195::o;15767:1325::-;15891:18;15886:3;15883:27;15880:53;;;15913:18;;:::i;:::-;15942:94;16032:3;15992:38;16024:4;16018:11;15992:38;:::i;:::-;15986:4;15942:94;:::i;:::-;16062:1;16087:2;16082:3;16079:11;16104:1;16099:735;;;;16878:1;16895:3;16892:93;;;-1:-1:-1;16951:19:37;;;16938:33;16892:93;10022:66;10013:1;10009:11;;;10005:84;10001:89;9991:100;10097:1;10093:11;;;9988:117;16998:78;;16072:1014;;16099:735;9282:1;9275:14;;;9319:4;9306:18;;16144:66;16135:76;;;16295:9;16317:229;16331:7;16328:1;16325:14;16317:229;;;16420:19;;;16407:33;16392:49;;16527:4;16512:20;;;;16480:1;16468:14;;;;16347:12;16317:229;;;16321:3;16574;16565:7;16562:16;16559:219;;;16694:66;16688:3;16682;16679:1;16675:11;16671:21;16667:94;16663:99;16650:9;16645:3;16641:19;16628:33;16624:139;16616:6;16609:155;16559:219;;;16821:1;16815:3;16812:1;16808:11;16804:19;16798:4;16791:33;16072:1014;;15767:1325;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "32841": [
        {
          "start": 4213,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(string)": "d85d3d27",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "queries(uint256)": "ab9c67ad",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenID()": "a5c42ef1",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdrawWTAO()": "67675dcc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllNFTsMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintingPeriodOver\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"queries\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWTAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xcacti\",\"kind\":\"dev\",\"methods\":{\"mint(string)\":{\"details\":\"Only callable during the minting period. User must approve the contract to spend their wTAO.\",\"params\":{\"query\":\"The query to save for the token.\"}},\"setBaseURI(string)\":{\"details\":\"only callable by owner\",\"params\":{\"_baseURI\":\"the baseURI to set\"}},\"tokenURI(uint256)\":{\"details\":\"return empty string if the baseURI is not previously set\",\"params\":{\"_tokenID\":\"the tokenID for which to retrieve metadata\"},\"returns\":{\"_0\":\"the tokenURI for the contract\"}}},\"title\":\"NFTensor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"baseURI()\":{\"notice\":\"The baseURI for the contract.\"},\"mint(string)\":{\"notice\":\"Mints a token to the sender.\"},\"queries(uint256)\":{\"notice\":\"The mapping of tokenID to query.\"},\"setBaseURI(string)\":{\"notice\":\"set the baseURI for the contract\"},\"tokenID()\":{\"notice\":\"The tokenID for the next token to be minted.\"},\"tokenURI(uint256)\":{\"notice\":\"get the baseURI for the contract\"}},\"notice\":\"Below is the contract for handling saving queries from which to create NFTs using the response from the Bittensor network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NFTensor.sol\":\"NFTensor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x260965186c4b36030b61bfff44312607b7d9bc03fa8b5e9c2581ffeb17d0053b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c50e42ec13a54820d77ceb54e16f6efc1e9af2312ed39049ffbd1a5489cd0ee\",\"dweb:/ipfs/Qma1xCsmPhDfAZfDZGoFC7wuCTNXDhsBdFEZKnrZgTUj93\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x1c58e6899314a94d6e99225481aaaa3e283050e7fddb5f72bebc244bc1fb4d21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11e6f36d32826f6f133248d1158a343b5201de5869553d46df56e7fd0163e3f3\",\"dweb:/ipfs/Qma3dZZiBCc8tTw6BjmjgYxyTSCBhW2nN4kPZwUSzFLMZd\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x609394b09bc0e0f4a3fb946c769dc75b4d4154b367503190ebd1e3ca12c23ca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a57dfea18ea68df6f48cca1ed1c030541a5d0cf1c115725da8ae7c2ad6f41f1\",\"dweb:/ipfs/QmZ5owm2HG4jjTzkimL9zHZHSTHT5o81L3mPA24391PtmT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/utils/LibString.sol\":{\"keccak256\":\"0x5129243d01d1ff65ee34aed11660bf13f01964f481664c96676877df70f32909\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf4ad509b77f5225faacd793953d6cab8a73667f9891fdfffb145168616bafeb\",\"dweb:/ipfs/QmfM7F1dXEDYruPaHXBXGC4cuWUizt1PBR628RNptEhbCd\"]},\"src/NFTensor.sol\":{\"keccak256\":\"0x2da1575d18af7babc13d479f9e1c6c033f2756c0b48847d2f2e486ddc8fc5242\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dfb7fdf29c321b7ca3beda3ad2760e79c13b9be1afc1e55485503475037e624f\",\"dweb:/ipfs/Qma21eRp7HM5wNrrHwnnefkE5XZp6kxARNGrJGayJbKWeu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllNFTsMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintingPeriodOver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "query",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queries",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenID",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawWTAO"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(string)": {
            "details": "Only callable during the minting period. User must approve the contract to spend their wTAO.",
            "params": {
              "query": "The query to save for the token."
            }
          },
          "setBaseURI(string)": {
            "details": "only callable by owner",
            "params": {
              "_baseURI": "the baseURI to set"
            }
          },
          "tokenURI(uint256)": {
            "details": "return empty string if the baseURI is not previously set",
            "params": {
              "_tokenID": "the tokenID for which to retrieve metadata"
            },
            "returns": {
              "_0": "the tokenURI for the contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "baseURI()": {
            "notice": "The baseURI for the contract."
          },
          "mint(string)": {
            "notice": "Mints a token to the sender."
          },
          "queries(uint256)": {
            "notice": "The mapping of tokenID to query."
          },
          "setBaseURI(string)": {
            "notice": "set the baseURI for the contract"
          },
          "tokenID()": {
            "notice": "The tokenID for the next token to be minted."
          },
          "tokenURI(uint256)": {
            "notice": "get the baseURI for the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/NFTensor.sol": "NFTensor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x260965186c4b36030b61bfff44312607b7d9bc03fa8b5e9c2581ffeb17d0053b",
        "urls": [
          "bzz-raw://4c50e42ec13a54820d77ceb54e16f6efc1e9af2312ed39049ffbd1a5489cd0ee",
          "dweb:/ipfs/Qma1xCsmPhDfAZfDZGoFC7wuCTNXDhsBdFEZKnrZgTUj93"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x1c58e6899314a94d6e99225481aaaa3e283050e7fddb5f72bebc244bc1fb4d21",
        "urls": [
          "bzz-raw://11e6f36d32826f6f133248d1158a343b5201de5869553d46df56e7fd0163e3f3",
          "dweb:/ipfs/Qma3dZZiBCc8tTw6BjmjgYxyTSCBhW2nN4kPZwUSzFLMZd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x609394b09bc0e0f4a3fb946c769dc75b4d4154b367503190ebd1e3ca12c23ca8",
        "urls": [
          "bzz-raw://5a57dfea18ea68df6f48cca1ed1c030541a5d0cf1c115725da8ae7c2ad6f41f1",
          "dweb:/ipfs/QmZ5owm2HG4jjTzkimL9zHZHSTHT5o81L3mPA24391PtmT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/LibString.sol": {
        "keccak256": "0x5129243d01d1ff65ee34aed11660bf13f01964f481664c96676877df70f32909",
        "urls": [
          "bzz-raw://cf4ad509b77f5225faacd793953d6cab8a73667f9891fdfffb145168616bafeb",
          "dweb:/ipfs/QmfM7F1dXEDYruPaHXBXGC4cuWUizt1PBR628RNptEhbCd"
        ],
        "license": "MIT"
      },
      "src/NFTensor.sol": {
        "keccak256": "0x2da1575d18af7babc13d479f9e1c6c033f2756c0b48847d2f2e486ddc8fc5242",
        "urls": [
          "bzz-raw://dfb7fdf29c321b7ca3beda3ad2760e79c13b9be1afc1e55485503475037e624f",
          "dweb:/ipfs/Qma21eRp7HM5wNrrHwnnefkE5XZp6kxARNGrJGayJbKWeu"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/NFTensor.sol",
    "id": 32996,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "ERC20": [
        32183
      ],
      "ERC721": [
        32727
      ],
      "LibString": [
        32791
      ],
      "NFTensor": [
        32995
      ],
      "Owned": [
        31795
      ],
      "StdAssertions": [
        3781
      ],
      "StdChains": [
        4475
      ],
      "StdCheats": [
        6751
      ],
      "StdInvariant": [
        7041
      ],
      "StdStorage": [
        7791
      ],
      "StdStyle": [
        10435
      ],
      "StdUtils": [
        11242
      ],
      "Test": [
        11291
      ],
      "TestBase": [
        2351
      ],
      "Vm": [
        12650
      ],
      "console": [
        20714
      ],
      "console2": [
        28810
      ],
      "stdError": [
        6817
      ],
      "stdJson": [
        7617
      ],
      "stdMath": [
        7759
      ],
      "stdStorage": [
        9224
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4099:34",
    "nodes": [
      {
        "id": 32793,
        "nodeType": "PragmaDirective",
        "src": "38:24:34",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 32795,
        "nodeType": "ImportDirective",
        "src": "64:51:34",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32996,
        "sourceUnit": 32748,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32794,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32727,
              "src": "73:6:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32797,
        "nodeType": "ImportDirective",
        "src": "116:49:34",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32996,
        "sourceUnit": 32184,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32796,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32183,
              "src": "125:5:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32799,
        "nodeType": "ImportDirective",
        "src": "166:47:34",
        "nodes": [],
        "absolutePath": "lib/solmate/src/auth/Owned.sol",
        "file": "solmate/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32996,
        "sourceUnit": 31796,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32798,
              "name": "Owned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31795,
              "src": "175:5:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32801,
        "nodeType": "ImportDirective",
        "src": "214:56:34",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/LibString.sol",
        "file": "solmate/utils/LibString.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32996,
        "sourceUnit": 32792,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32800,
              "name": "LibString",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32791,
              "src": "223:9:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32802,
        "nodeType": "ImportDirective",
        "src": "271:28:34",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32996,
        "sourceUnit": 11292,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32995,
        "nodeType": "ContractDefinition",
        "src": "479:3657:34",
        "nodes": [
          {
            "id": 32810,
            "nodeType": "UsingForDirective",
            "src": "520:28:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32808,
              "name": "LibString",
              "nameLocations": [
                "526:9:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32791,
              "src": "526:9:34"
            },
            "typeName": {
              "id": 32809,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 32814,
            "nodeType": "UsingForDirective",
            "src": "553:32:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32811,
              "name": "stdStorage",
              "nameLocations": [
                "559:10:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9224,
              "src": "559:10:34"
            },
            "typeName": {
              "id": 32813,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32812,
                "name": "StdStorage",
                "nameLocations": [
                  "574:10:34"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7791,
                "src": "574:10:34"
              },
              "referencedDeclaration": 7791,
              "src": "574:10:34",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$7791_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 32818,
            "nodeType": "VariableDeclaration",
            "src": "806:75:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 32815,
              "nodeType": "StructuredDocumentation",
              "src": "771:30:34",
              "text": "@notice The owner address."
            },
            "mutability": "constant",
            "name": "OWNER_ADDRESS",
            "nameLocation": "823:13:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32816,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842393537373737313941653539456134374139396537343441664135394364634631633431306131",
              "id": 32817,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "839:42:34",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xB95777719Ae59Ea47A99e744AfA59CdcF1c410a1"
            },
            "visibility": "internal"
          },
          {
            "id": 32822,
            "nodeType": "VariableDeclaration",
            "src": "918:74:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 32819,
              "nodeType": "StructuredDocumentation",
              "src": "888:25:34",
              "text": "@notice wTAO address."
            },
            "mutability": "constant",
            "name": "WTAO_ADDRESS",
            "nameLocation": "935:12:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32820,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "918:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837374530366339654343663245373937666434363241393242364437363432454638356230413434",
              "id": 32821,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "950:42:34",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x77E06c9eCCf2E797fd462A92B6D7642EF85b0A44"
            },
            "visibility": "internal"
          },
          {
            "id": 32826,
            "nodeType": "VariableDeclaration",
            "src": "1067:33:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 32823,
              "nodeType": "StructuredDocumentation",
              "src": "999:63:34",
              "text": "@notice The minimum amount of wTAO required to mint an NFT."
            },
            "mutability": "constant",
            "name": "MINT_PRICE",
            "nameLocation": "1084:10:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32824,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1067:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316539",
              "id": 32825,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1097:3:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1e9"
            },
            "visibility": "internal"
          },
          {
            "id": 32830,
            "nodeType": "VariableDeclaration",
            "src": "1170:33:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 32827,
              "nodeType": "StructuredDocumentation",
              "src": "1107:58:34",
              "text": "@notice The maximum supply of NFTs that can be minted."
            },
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "1187:10:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32828,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1170:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 32829,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1200:3:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "internal"
          },
          {
            "id": 32834,
            "nodeType": "VariableDeclaration",
            "src": "1279:37:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 32831,
              "nodeType": "StructuredDocumentation",
              "src": "1210:64:34",
              "text": "@notice The length of time during which minting is possible."
            },
            "mutability": "constant",
            "name": "MINT_LENGTH",
            "nameLocation": "1296:11:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32832,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1279:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 32833,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1310:6:34",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_432000_by_1",
                "typeString": "int_const 432000"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "id": 32836,
            "nodeType": "ErrorDefinition",
            "src": "1500:26:34",
            "nodes": [],
            "errorSelector": "e1be3ef1",
            "name": "MintingPeriodOver",
            "nameLocation": "1506:17:34",
            "parameters": {
              "id": 32835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:2:34"
            }
          },
          {
            "id": 32838,
            "nodeType": "ErrorDefinition",
            "src": "1532:22:34",
            "nodes": [],
            "errorSelector": "e51add99",
            "name": "AllNFTsMinted",
            "nameLocation": "1538:13:34",
            "parameters": {
              "id": 32837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:2:34"
            }
          },
          {
            "id": 32841,
            "nodeType": "VariableDeclaration",
            "src": "1843:28:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 32839,
              "nodeType": "StructuredDocumentation",
              "src": "1746:92:34",
              "text": "@notice Blocktimestamp during construction that signals start of minting period._tokenID"
            },
            "mutability": "immutable",
            "name": "MINT_START",
            "nameLocation": "1861:10:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32840,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1843:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32844,
            "nodeType": "VariableDeclaration",
            "src": "1939:22:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 32842,
              "nodeType": "StructuredDocumentation",
              "src": "1878:56:34",
              "text": "@notice The tokenID for the next token to be minted."
            },
            "functionSelector": "a5c42ef1",
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "1954:7:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1939:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32847,
            "nodeType": "VariableDeclaration",
            "src": "2014:21:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 32845,
              "nodeType": "StructuredDocumentation",
              "src": "1968:41:34",
              "text": "@notice The baseURI for the contract."
            },
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "2028:7:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 32846,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2014:6:34",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32852,
            "nodeType": "VariableDeclaration",
            "src": "2091:41:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 32848,
              "nodeType": "StructuredDocumentation",
              "src": "2042:44:34",
              "text": "@notice The mapping of tokenID to query."
            },
            "functionSelector": "ab9c67ad",
            "mutability": "mutable",
            "name": "queries",
            "nameLocation": "2125:7:34",
            "scope": 32995,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 32851,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 32849,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2099:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2091:26:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32850,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2110:6:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 32868,
            "nodeType": "FunctionDefinition",
            "src": "2139:111:34",
            "nodes": [],
            "body": {
              "id": 32867,
              "nodeType": "Block",
              "src": "2205:45:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32862,
                      "name": "MINT_START",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32841,
                      "src": "2215:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 32863,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2228:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 32864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2234:9:34",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2228:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2215:28:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32866,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:28:34"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4e4654656e736f72",
                    "id": 32855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2160:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3f4b46e8c963379091a1edba6b3c6ec6bc04316bf8e7d40ccbc2504b79821aeb",
                      "typeString": "literal_string \"NFTensor\""
                    },
                    "value": "NFTensor"
                  },
                  {
                    "hexValue": "4e4654454e534f52",
                    "id": 32856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2172:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6b691f06239332c7efedfbd76723ffe9172c0e8d4982c18bc5b8c7168e420d2c",
                      "typeString": "literal_string \"NFTENSOR\""
                    },
                    "value": "NFTENSOR"
                  }
                ],
                "id": 32857,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32854,
                  "name": "ERC721",
                  "nameLocations": [
                    "2153:6:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32727,
                  "src": "2153:6:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "2153:30:34"
              },
              {
                "arguments": [
                  {
                    "id": 32859,
                    "name": "OWNER_ADDRESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32818,
                    "src": "2190:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 32860,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32858,
                  "name": "Owned",
                  "nameLocations": [
                    "2184:5:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31795,
                  "src": "2184:5:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "2184:20:34"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2150:2:34"
            },
            "returnParameters": {
              "id": 32861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:0:34"
            },
            "scope": 32995,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32926,
            "nodeType": "FunctionDefinition",
            "src": "2461:487:34",
            "nodes": [],
            "body": {
              "id": 32925,
              "nodeType": "Block",
              "src": "2507:441:34",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 32874,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2521:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 32875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2527:9:34",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2521:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32876,
                        "name": "MINT_START",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32841,
                        "src": "2539:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 32877,
                        "name": "MINT_LENGTH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32834,
                        "src": "2552:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2539:24:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2521:42:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32884,
                  "nodeType": "IfStatement",
                  "src": "2517:99:34",
                  "trueBody": {
                    "id": 32883,
                    "nodeType": "Block",
                    "src": "2565:51:34",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32880,
                            "name": "MintingPeriodOver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32836,
                            "src": "2586:17:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2586:19:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32882,
                        "nodeType": "RevertStatement",
                        "src": "2579:26:34"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32885,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32844,
                        "src": "2630:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 32886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2630:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 32888,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32830,
                      "src": "2644:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2630:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32894,
                  "nodeType": "IfStatement",
                  "src": "2626:77:34",
                  "trueBody": {
                    "id": 32893,
                    "nodeType": "Block",
                    "src": "2656:47:34",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32890,
                            "name": "AllNFTsMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32838,
                            "src": "2677:13:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2677:15:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32892,
                        "nodeType": "RevertStatement",
                        "src": "2670:22:34"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32900,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2807:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2811:6:34",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2807:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 32904,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2827:4:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTensor_$32995",
                                  "typeString": "contract NFTensor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NFTensor_$32995",
                                  "typeString": "contract NFTensor"
                                }
                              ],
                              "id": 32903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2819:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32902,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2819:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2819:13:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 32906,
                            "name": "MINT_PRICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32826,
                            "src": "2834:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32897,
                                "name": "WTAO_ADDRESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32822,
                                "src": "2780:12:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32896,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32183,
                              "src": "2774:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$32183_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 32898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2774:19:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32183",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 32899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2794:12:34",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31994,
                          "src": "2774:32:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 32907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2774:71:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2766:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:80:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32909,
                  "nodeType": "ExpressionStatement",
                  "src": "2766:80:34"
                },
                {
                  "expression": {
                    "id": 32911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2857:9:34",
                    "subExpression": {
                      "id": 32910,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32844,
                      "src": "2857:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32912,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:9:34"
                },
                {
                  "expression": {
                    "id": 32917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32913,
                        "name": "queries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32852,
                        "src": "2876:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 32915,
                      "indexExpression": {
                        "id": 32914,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32844,
                        "src": "2884:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2876:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32916,
                      "name": "query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32871,
                      "src": "2895:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2876:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32918,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:24:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32920,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2921:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2925:6:34",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2921:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32922,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32844,
                        "src": "2933:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32919,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32684,
                        32726
                      ],
                      "referencedDeclaration": 32684,
                      "src": "2911:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:30:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32924,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:30:34"
                }
              ]
            },
            "documentation": {
              "id": 32869,
              "nodeType": "StructuredDocumentation",
              "src": "2256:200:34",
              "text": "@notice Mints a token to the sender.\n @dev Only callable during the minting period. User must approve the contract to spend their wTAO.\n @param query The query to save for the token."
            },
            "functionSelector": "d85d3d27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2470:4:34",
            "parameters": {
              "id": 32872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32871,
                  "mutability": "mutable",
                  "name": "query",
                  "nameLocation": "2491:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32926,
                  "src": "2475:21:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2474:23:34"
            },
            "returnParameters": {
              "id": 32873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2507:0:34"
            },
            "scope": 32995,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32956,
            "nodeType": "FunctionDefinition",
            "src": "3365:200:34",
            "nodes": [],
            "body": {
              "id": 32955,
              "nodeType": "Block",
              "src": "3454:111:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32937,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32847,
                              "src": "3477:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 32936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3471:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 32935,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3471:5:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:14:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 32939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3486:6:34",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3471:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3495:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3471:25:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 32952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3556:2:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 32953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3471:87:34",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32946,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32847,
                              "src": "3523:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32947,
                                  "name": "_tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32929,
                                  "src": "3532:8:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 32948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3541:8:34",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32790,
                                "src": "3532:17:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 32949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3532:19:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 32944,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3506:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 32945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3510:12:34",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3506:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 32950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3506:46:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 32943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3499:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 32942,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3499:6:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 32951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3499:54:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 32934,
                  "id": 32954,
                  "nodeType": "Return",
                  "src": "3464:94:34"
                }
              ]
            },
            "baseFunctions": [
              32221
            ],
            "documentation": {
              "id": 32927,
              "nodeType": "StructuredDocumentation",
              "src": "3133:227:34",
              "text": "@notice get the baseURI for the contract\n @dev return empty string if the baseURI is not previously set\n @param _tokenID the tokenID for which to retrieve metadata\n @return the tokenURI for the contract"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3374:8:34",
            "overrides": {
              "id": 32931,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3421:8:34"
            },
            "parameters": {
              "id": 32930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32929,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "3391:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32956,
                  "src": "3383:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3383:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3382:18:34"
            },
            "returnParameters": {
              "id": 32934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32956,
                  "src": "3439:13:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32932,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3439:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3438:15:34"
            },
            "scope": 32995,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 32969,
            "nodeType": "FunctionDefinition",
            "src": "3699:98:34",
            "nodes": [],
            "body": {
              "id": 32968,
              "nodeType": "Block",
              "src": "3762:35:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32964,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32847,
                      "src": "3772:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32965,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32959,
                      "src": "3782:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3772:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32967,
                  "nodeType": "ExpressionStatement",
                  "src": "3772:18:34"
                }
              ]
            },
            "documentation": {
              "id": 32957,
              "nodeType": "StructuredDocumentation",
              "src": "3571:123:34",
              "text": "@notice set the baseURI for the contract\n @dev only callable by owner\n @param _baseURI the baseURI to set"
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32961,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3752:9:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31758,
                  "src": "3752:9:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "3752:9:34"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "3708:10:34",
            "parameters": {
              "id": 32960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32959,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "3733:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32969,
                  "src": "3719:22:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32958,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3718:24:34"
            },
            "returnParameters": {
              "id": 32963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3762:0:34"
            },
            "scope": 32995,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32994,
            "nodeType": "FunctionDefinition",
            "src": "3979:155:34",
            "nodes": [],
            "body": {
              "id": 32993,
              "nodeType": "Block",
              "src": "4022:112:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32979,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4069:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4073:6:34",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4069:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 32987,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4119:4:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTensor_$32995",
                                      "typeString": "contract NFTensor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTensor_$32995",
                                      "typeString": "contract NFTensor"
                                    }
                                  ],
                                  "id": 32986,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4111:7:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 32985,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4111:7:34",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 32988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4111:13:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 32982,
                                    "name": "WTAO_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32822,
                                    "src": "4087:12:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 32981,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32183,
                                  "src": "4081:5:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$32183_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 32983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4081:19:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$32183",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 32984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4101:9:34",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31826,
                              "src": "4081:29:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 32989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4081:44:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32976,
                                "name": "WTAO_ADDRESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32822,
                                "src": "4046:12:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32975,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32183,
                              "src": "4040:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$32183_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 32977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4040:19:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32183",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 32978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4060:8:34",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31933,
                          "src": "4040:28:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 32990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4040:86:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4032:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4032:95:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32992,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:95:34"
                }
              ]
            },
            "functionSelector": "67675dcc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32972,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32971,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4012:9:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31758,
                  "src": "4012:9:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "4012:9:34"
              }
            ],
            "name": "withdrawWTAO",
            "nameLocation": "3988:12:34",
            "parameters": {
              "id": 32970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4000:2:34"
            },
            "returnParameters": {
              "id": 32973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4022:0:34"
            },
            "scope": 32995,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32804,
              "name": "ERC721",
              "nameLocations": [
                "500:6:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32727,
              "src": "500:6:34"
            },
            "id": 32805,
            "nodeType": "InheritanceSpecifier",
            "src": "500:6:34"
          },
          {
            "baseName": {
              "id": 32806,
              "name": "Owned",
              "nameLocations": [
                "508:5:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31795,
              "src": "508:5:34"
            },
            "id": 32807,
            "nodeType": "InheritanceSpecifier",
            "src": "508:5:34"
          }
        ],
        "canonicalName": "NFTensor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32803,
          "nodeType": "StructuredDocumentation",
          "src": "301:178:34",
          "text": "@title NFTensor\n @author 0xcacti\n @notice Below is the contract for handling saving queries from which to create NFTs using the response from the\n Bittensor network"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32995,
          31795,
          32727
        ],
        "name": "NFTensor",
        "nameLocation": "488:8:34",
        "scope": 32996,
        "usedErrors": [
          32836,
          32838
        ]
      }
    ],
    "license": "Unlicense"
  },
  "id": 34
}